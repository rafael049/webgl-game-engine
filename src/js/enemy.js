// Generated by LiveScript 1.6.0
(function(){
  var Enemy;
  window.Enemy = Enemy = (function(superclass){
    var prototype = extend$((import$(Enemy, superclass).displayName = 'Enemy', Enemy), superclass).prototype, constructor = Enemy;
    function Enemy(gl, pos){
      Enemy.superclass.call(this, gl, pos);
      this.name = "unnamed_enemy";
      this.shader = Resources.getShader(gl, "sprite");
      this.mesh = Resources.getMesh(gl, "sprite1");
      this.canCollide = true;
      this.radius = 1.0;
      this.anim.xTiles = 1;
      this.anim.yTiles = 1;
      this.state = "Iddle";
      this.timers = [];
      this.health = 10.0;
    }
    Enemy.prototype.update = function(){
      this.lookAtCamera();
      return vec3.add(this.pos, this.pos, this.vel);
    };
    Enemy.prototype.wait = function(name, time){
      var now, end;
      now = Date.now();
      end = now + time;
      if (this.timers[name]) {
        if (now > this.timers[name]) {
          delete this.timers[name];
          return true;
        } else {
          return false;
        }
      } else {
        this.timers[name] = end;
        return false;
      }
    };
    return Enemy;
  }(Sprite));
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
