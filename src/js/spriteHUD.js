// Generated by LiveScript 1.6.0
(function(){
  var SpriteHUD, PistolSprite, CaceteteSprite;
  window.SpriteHUD = SpriteHUD = (function(superclass){
    var prototype = extend$((import$(SpriteHUD, superclass).displayName = 'SpriteHUD', SpriteHUD), superclass).prototype, constructor = SpriteHUD;
    function SpriteHUD(gl, pos){
      SpriteHUD.superclass.call(this, gl, pos);
    }
    SpriteHUD.prototype.render = function(projectionMatrix){
      var viewMatrix;
      viewMatrix = mat4.create();
      mat4.identity(viewMatrix);
      return superclass.prototype.render.call(this, viewMatrix, projectionMatrix);
    };
    return SpriteHUD;
  }(Sprite));
  window.PistolSprite = PistolSprite = (function(superclass){
    var prototype = extend$((import$(PistolSprite, superclass).displayName = 'PistolSprite', PistolSprite), superclass).prototype, constructor = PistolSprite;
    function PistolSprite(gl){
      var pos;
      pos = [1.2, -1.1, -0.1];
      PistolSprite.superclass.call(this, gl, pos);
      this.texture = Resources.getTexture(gl, "doomPistol.png");
      this.anim.xTiles = 3;
      this.anim.yTiles = 2;
      this.anim.anims["Idle"] = [0, 0];
      this.anim.anims["Shot"] = [0, 5];
      this.anim.curAnim = "Idle";
    }
    return PistolSprite;
  }(SpriteHUD));
  window.CaceteteSprite = CaceteteSprite = (function(superclass){
    var prototype = extend$((import$(CaceteteSprite, superclass).displayName = 'CaceteteSprite', CaceteteSprite), superclass).prototype, constructor = CaceteteSprite;
    function CaceteteSprite(gl){
      var pos;
      pos = [0.8, -1.1, -0.1];
      CaceteteSprite.superclass.call(this, gl, pos);
      this.sca[0] = 1.4;
      this.texture = Resources.getTexture(gl, "doomBat.png");
      this.anim.xTiles = 15;
      this.anim.yTiles = 1;
      this.anim.anims["Idle"] = [0, 0];
      this.anim.anims["Shot"] = [0, 9];
      this.anim.curAnim = "Idle";
    }
    return CaceteteSprite;
  }(SpriteHUD));
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
